// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Week6EFTest.Context;

namespace Week6EFTest.Migrations
{
    [DbContext(typeof(InsuranceContext))]
    [Migration("20210625091351_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Week6EFTest.Models.Client", b =>
                {
                    b.Property<int>("CF")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CF");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Week6EFTest.Models.Policy", b =>
                {
                    b.Property<string>("NUM")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("ClientCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<double>("MonthlyFee")
                        .HasColumnType("float");

                    b.Property<string>("prodotto_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NUM");

                    b.HasIndex("ClientCode");

                    b.ToTable("Policy");

                    b.HasDiscriminator<string>("prodotto_type").HasValue("policy");
                });

            modelBuilder.Entity("Week6EFTest.Models.Auto", b =>
                {
                    b.HasBaseType("Week6EFTest.Models.Policy");

                    b.Property<int>("Displacement")
                        .HasColumnType("int");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("auto");
                });

            modelBuilder.Entity("Week6EFTest.Models.Furto", b =>
                {
                    b.HasBaseType("Week6EFTest.Models.Policy");

                    b.Property<int>("Coverage")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("furto");
                });

            modelBuilder.Entity("Week6EFTest.Models.Life", b =>
                {
                    b.HasBaseType("Week6EFTest.Models.Policy");

                    b.Property<int>("Years")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("life");
                });

            modelBuilder.Entity("Week6EFTest.Models.Policy", b =>
                {
                    b.HasOne("Week6EFTest.Models.Client", "Client")
                        .WithMany("Policies")
                        .HasForeignKey("ClientCode");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Week6EFTest.Models.Client", b =>
                {
                    b.Navigation("Policies");
                });
#pragma warning restore 612, 618
        }
    }
}
